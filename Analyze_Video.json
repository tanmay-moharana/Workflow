{
  "name": "YouTube Gaming Highlights to Shorts with Scoring & Logging",
  "nodes": [
    {
      "id": "1",
      "name": "Trigger Every 6h",
      "type": "n8n-nodes-base.cron",
      "parameters": {
        "triggerTimes": [{ "mode": "everyX", "unit": "hours", "value": 6 }]
      },
      "typeVersion": 1,
      "position": [200, 200]
    },
    {
      "id": "2",
      "name": "Get Channel Uploads",
      "type": "n8n-nodes-base.httpRequest",
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "authentication": "oAuth2",
        "queryParametersUi": {
          "parameter": [
            { "name": "part", "value": "snippet" },
            { "name": "channelId", "value": "UCqKZx0XQEFg6OD79XEfiERg" },
            { "name": "order", "value": "date" },
            { "name": "maxResults", "value": "5" },
            { "name": "type", "value": "video" }
          ]
        }
      },
      "typeVersion": 2,
      "position": [400, 200],
      "credentials": { "oAuth2Api": "YouTube OAuth2" }
    },
    {
      "id": "2a",
      "name": "Build Video URL",
      "type": "n8n-nodes-base.function",
      "parameters": {
        "functionCode": "if (!$json.id?.videoId) throw new Error('videoId not found');\nreturn [{ json: { videoUrl: `https://www.youtube.com/watch?v=${$json.id.videoId}` } }];"
      },
      "typeVersion": 1,
      "position": [600, 200]
    },
    {
      "id": "2b",
      "name": "Update & Download Video",
      "type": "n8n-nodes-base.executeCommand",
      "parameters": {
        "command": "bash",
        "arguments": [
          "-c",
          "yt-dlp -U && mkdir -p /data && yt-dlp --cookies /data/youtube-cookies.txt -f bestvideo+bestaudio/best --merge-output-format mp4 --compat-options no-youtube-legacy-dash -o /data/video.%(ext)s {{$json.videoUrl}}"
        ]
      },
      "typeVersion": 1,
      "position": [800, 150]
    },
    {
      "id": "3",
      "name": "Download Video",
      "type": "n8n-nodes-base.executeCommand",
      "parameters": {
        "command": "={{`yt-dlp -f \"best[ext=mp4]\" -o /tmp/video.mp4 ${$json.videoUrl}`}}"
      },
      "typeVersion": 1,
      "position": [1000, 200]
    },
    {
      "id": "4",
      "name": "Analyze with Google Video Intelligence",
      "type": "n8n-nodes-base.httpRequest",
      "parameters": {
        "url": "https://videointelligence.googleapis.com/v1/videos:annotate",
        "method": "POST",
        "authentication": "headerAuth",
        "jsonParameters": true,
        "body": {
          "features": ["SHOT_CHANGE_DETECTION", "LABEL_DETECTION"],
          "inputUri": "gs://automatedyoutubevideos/video.mp4"
        }
      },
      "typeVersion": 2,
      "position": [1200, 200],
      "credentials": { "httpHeaderAuth": "Google API Key" }
    },
    {
      "id": "5",
      "name": "Rank Highlights (Excitement Score)",
      "type": "n8n-nodes-base.function",
      "parameters": {
        "functionCode": "const scenes = items[0].json.annotationResults[0].shotAnnotations;\nconst labels = items[0].json.annotationResults[0].segmentLabelAnnotations;\n\nfunction scoreScene(start, end) {\n  let score = 0;\n  const duration = end - start;\n\n  if (duration >= 15 && duration <= 45) score += 2;\n\n  for (const label of labels) {\n    for (const seg of label.segments) {\n      const segStart = seg.segment.startTimeOffset?.seconds || 0;\n      const segEnd = seg.segment.endTimeOffset?.seconds || 0;\n      if (segStart <= start && segEnd >= end) {\n        if ([\"Explosion\", \"Fight\", \"Cheering\", \"Gunshot\", \"Goal\"].includes(label.entity.description)) {\n          score += Math.round((label.confidence || 0) * 10);\n        }\n      }\n    }\n  }\n  return score;\n}\n\nconst ranked = scenes.map(s => {\n  const start = s.startTimeOffset?.seconds || 0;\n  const end = s.endTimeOffset?.seconds || 0;\n  return { start, end, score: scoreScene(start, end) };\n});\n\nranked.sort((a, b) => b.score - a.score);\n\nreturn ranked.slice(0, 3).map(s => ({ json: s }));"
      },
      "typeVersion": 1,
      "position": [1400, 200]
    },
    {
      "id": "6",
      "name": "Clip with FFmpeg",
      "type": "n8n-nodes-base.executeCommand",
      "parameters": {
        "command": "ffmpeg -ss {{$json[\"start\"]}} -i /tmp/video.mp4 -to {{$json[\"end\"]}} -vf \"scale=720:1280:force_original_aspect_ratio=decrease,pad=720:1280:(ow-iw)/2:(oh-ih)/2\" -c:a copy /tmp/shorts_{{$json[\"start\"]}}.mp4"
      },
      "typeVersion": 1,
      "position": [1600, 200]
    },
    {
      "id": "7",
      "name": "Upload as YouTube Short",
      "type": "n8n-nodes-base.httpRequest",
      "parameters": {
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?part=snippet,status",
        "method": "POST",
        "authentication": "oAuth2",
        "options": {},
        "jsonParameters": true,
        "body": {
          "snippet": {
            "title": "Gaming Highlight #shorts",
            "description": "Auto-generated highlight from gaming session",
            "tags": ["gaming", "shorts", "highlights"]
          },
          "status": { "privacyStatus": "public" }
        },
        "sendBinaryData": true,
        "binaryPropertyName": "data"
      },
      "typeVersion": 2,
      "position": [1800, 200],
      "credentials": { "oAuth2Api": "YouTube OAuth2" }
    },
    {
      "id": "8",
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "parameters": {
        "operation": "append",
        "sheetId": "1WImoOTdPiYiflny3WhgagxKS14RFT59WVtx1o0TPXAk",
        "range": "Highlights!A:D",
        "fields": {
          "values": [
            "={{$json[\"videoUrl\"]}}",
            "={{$json[\"start\"]}}â€“{{$json[\"end\"]}}",
            "={{$json[\"uploadResult\"][\"id\"]}}",
            "={{$json[\"score\"]}}"
          ]
        }
      },
      "typeVersion": 2,
      "position": [2000, 200],
      "credentials": { "googleApi": "Google Sheets OAuth2" }
    }
  ],
  "connections": {
    "1": { "main": [[{ "node": "Get Channel Uploads", "type": "main", "index": 0 }]] },
    "2": { "main": [[{ "node": "Build Video URL", "type": "main", "index": 0 }]] },
    "2a": { "main": [[{ "node": "Update & Download Video", "type": "main", "index": 0 }]] },
    "2b": { "main": [[{ "node": "Download Video", "type": "main", "index": 0 }]] },
    "3": { "main": [[{ "node": "Analyze with Google Video Intelligence", "type": "main", "index": 0 }]] },
    "4": { "main": [[{ "node": "Rank Highlights (Excitement Score)", "type": "main", "index": 0 }]] },
    "5": { "main": [[{ "node": "Clip with FFmpeg", "type": "main", "index": 0 }]] },
    "6": { "main": [[{ "node": "Upload as YouTube Short", "type": "main", "index": 0 }]] },
    "7": { "main": [[{ "node": "Log to Google Sheets", "type": "main", "index": 0 }]] }
  }
}
