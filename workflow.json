{
  "name": "Gaming Highlights â†’ YouTube Shorts (Connected Layout)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "youtube-form",
        "responseMode": "lastNode"
      },
      "id": "1",
      "name": "Webhook Form (GET)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [100, 200]
    },
    {
      "parameters": {
        "functionCode": "return [{ json: { html: `<html><body><h1>Submit YouTube Gaming URL</h1><form method='POST' action='/webhook/youtube-form'><input type='text' name='video_url' placeholder='YouTube URL' style='width:300px'/><br><br><input type='text' name='game_name' placeholder='Game Name' style='width:300px'/><br><br><input type='submit' value='Submit'/></form></body></html>` } }];"
      },
      "id": "2",
      "name": "Return HTML Form",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [350, 200]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "youtube-form",
        "responseMode": "lastNode"
      },
      "id": "3",
      "name": "Webhook Form (POST)",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [100, 400]
    },
    {
      "parameters": {
        "command": "yt-dlp --output '/tmp/video.mp4' {{$json[\"body\"][\"video_url\"]}}"
      },
      "id": "4",
      "name": "Download Video (yt-dlp)",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [350, 400]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "videos",
        "operation": "annotate",
        "features": [
          "SHOT_CHANGE_DETECTION",
          "LABEL_DETECTION",
          "EXPLICIT_CONTENT_DETECTION"
        ],
        "videoPath": "/tmp/video.mp4"
      },
      "id": "5",
      "name": "Google Video Intelligence",
      "type": "n8n-nodes-base.googleCloudVideoIntelligence",
      "typeVersion": 1,
      "position": [600, 400],
      "credentials": {
        "googleApi": "Google Service Account"
      }
    },
    {
      "parameters": {
        "functionCode": "// Filter safe gaming clips\nconst results = items[0].json.annotationResults[0];\nconst safeScenes = [];\nfor (const shot of results.shotAnnotations) {\n  const startSec = parseFloat(shot.startTimeOffset.replace('s','')) || 0;\n  const endSec = parseFloat(shot.endTimeOffset.replace('s','')) || 0;\n  const duration = endSec - startSec;\n  if (duration < 3 || duration > 60) continue;\n\n  let isSafe = true;\n  if (results.explicitAnnotation && results.explicitAnnotation.frames) {\n    const relatedFrames = results.explicitAnnotation.frames.filter(f => {\n      const t = parseFloat(f.timeOffset.replace('s','')) || 0;\n      return t >= startSec && t <= endSec;\n    });\n    if (relatedFrames.some(f => f.pornographyLikelihood && f.pornographyLikelihood !== 'VERY_UNLIKELY' && f.pornographyLikelihood !== 'UNLIKELY')) isSafe = false;\n  }\n  if (results.segmentLabelAnnotations) {\n    const segmentLabels = results.segmentLabelAnnotations.map(l => l.entity.description.toLowerCase());\n    const badLabels = ['weapon','violence','gore'];\n    if (segmentLabels.some(lbl => badLabels.includes(lbl))) isSafe = false;\n  }\n  if (isSafe) {\n    const labels = results.segmentLabelAnnotations.map(l => l.entity.description);\n    safeScenes.push({ start: startSec, end: endSec, labels });\n  }\n}\n\n// Take top 3 clips by duration\nsafeScenes.sort((a,b)=> (b.end-a.start)-(a.end-a.start));\nreturn safeScenes.slice(0,3).map(scene => ({ json: scene }));"
      },
      "id": "6",
      "name": "Filter Safe Gaming Clips",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [850, 400]
    },
    {
      "parameters": {
        "command": "ffmpeg -i /tmp/video.mp4 -ss {{$json.start}} -to {{$json.end}} -vf \"scale=1080:1920\" -c:a copy /tmp/clip{{$itemIndex}}.mp4"
      },
      "id": "7",
      "name": "Clip Scene (FFmpeg)",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1100, 400]
    },
    {
      "parameters": {
        "functionCode": "const hashtags = ['#Shorts','#Gaming',`#${$json.game_name.replace(/\\s+/g,'')}`];\nreturn items.map((item,index)=>({\n  json: {\n    videoPath:`/tmp/clip${index}.mp4`,\n    title: item.json.labels.length>0?`${item.json.labels.slice(0,2).join(' ')} in ${$json.game_name} ðŸŽ®ðŸ”¥ ${hashtags.join(' ')}`:`Epic ${$json.game_name} Moment #${index+1} ${hashtags.join(' ')}`,\n    description: `Auto-clipped highlight from ${$json.game_name} gameplay. Enjoy! ${hashtags.join(' ')}`\n  }\n}));"
      },
      "id": "8",
      "name": "Generate Gaming Titles",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1350, 400]
    },
    {
      "parameters": {
        "video": "={{$json[\"videoPath\"]}}",
        "title": "={{$json[\"title\"]}}",
        "description": "={{$json[\"description\"]}}",
        "categoryId": "20",
        "privacyStatus": "public"
      },
      "id": "9",
      "name": "Upload to YouTube",
      "type": "n8n-nodes-base.youtube",
      "typeVersion": 1,
      "position": [1600, 400],
      "credentials": {
        "youtubeOAuth2Api": "YouTube OAuth"
      }
    },
    {
      "parameters": {
        "command": "rm /tmp/video.mp4 /tmp/clip*.mp4"
      },
      "id": "10",
      "name": "Cleanup",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1850, 400]
    }
  ],
  "connections": {
    "Webhook Form (GET)": { "main":[[{"node":"Return HTML Form","type":"main","index":0}]] },
    "Webhook Form (POST)": { "main":[[{"node":"Download Video (yt-dlp)","type":"main","index":0}]] },
    "Download Video (yt-dlp)": { "main":[[{"node":"Google Video Intelligence","type":"main","index":0}]] },
    "Google Video Intelligence": { "main":[[{"node":"Filter Safe Gaming Clips","type":"main","index":0}]] },
    "Filter Safe Gaming Clips": { "main":[[{"node":"Clip Scene (FFmpeg)","type":"main","index":0}]] },
    "Clip Scene (FFmpeg)": { "main":[[{"node":"Generate Gaming Titles","type":"main","index":0}]] },
    "Generate Gaming Titles": { "main":[[{"node":"Upload to YouTube","type":"main","index":0}]] },
    "Upload to YouTube": { "main":[[{"node":"Cleanup","type":"main","index":0}]] }
  },
  "active": false
}
